# https://habr.com/ru/post/540072/
# remove all images
# docker rmi -f $(docker images -aq)
# remove all volumes
# docker volume rm $(docker volume ls -q)
# docker rm $(docker ps -a -f status=exited -q)
# docker-compose exec -it app bash
# docker-compose exec app composer install

version: '3'

#Docker Networks
networks:
    app-network:
        driver: bridge

services:

    #PHP Service
    app:
        container_name: ${PROJECT_NAME}_app
        restart: unless-stopped
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./_docker/app/php/php.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    #Webserver Service
    nginx:
        container_name: ${PROJECT_NAME}_nginx
        image: nginx:latest
        restart: unless-stopped
        volumes:
            - ./:/var/www
            - ./_docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - ${WEB_LOCAL_PORT}:80
        depends_on:
            - app
        networks:
            - app-network

    #Database Service
    db:
        container_name: ${PROJECT_NAME}_db
        image: mysql:8.0
        restart: unless-stopped
        volumes:
            - ./tmp/db/:/var/lib/mysql/
            - ./_docker/mysql/my.cnf:/etc/mysql/my.cnf
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - ${DB_LOCAL_PORT}:3306
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
        networks:
            - app-network
